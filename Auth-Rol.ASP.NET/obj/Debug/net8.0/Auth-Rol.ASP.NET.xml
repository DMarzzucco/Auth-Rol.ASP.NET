<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Auth-Rol.ASP.NET</name>
    </assembly>
    <members>
        <member name="M:Auth_Rol.ASP.NET.Auth.Controller.AuthController.Login(Auth_Rol.ASP.NET.Auth.DTO.AuthDTO)">
            <summary>
            Login User
            </summary>
            <returns>User token</returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Auth.Controller.AuthController.GetProfile">
            <summary>
            Get Profile
            </summary>
            <returns>Get User Profile </returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Auth.Controller.AuthController.LogOut">
            <summary>
            Log Out
            </summary>
            <returns>A Log Out Successfully </returns>
        </member>
        <member name="T:Auth_Rol.ASP.NET.Migrations.Initial">
            <inheritdoc />
        </member>
        <member name="M:Auth_Rol.ASP.NET.Migrations.Initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Auth_Rol.ASP.NET.Migrations.Initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Auth_Rol.ASP.NET.Migrations.Initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Auth_Rol.ASP.NET.Project.Controller.ProjectController.CreateProject(Auth_Rol.ASP.NET.Project.DTO.CreateProjectDTO)">
            <summary>
            Create a Project
            </summary>
            <returns>Give a new Project</returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Project.Controller.ProjectController.GetAllProject">
            <summary>
            Get All Project
            </summary>
            <returns>List of Project</returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Project.Controller.ProjectController.GetAProjectById(System.Int32)">
            <summary>
            Get a Project
            </summary>
            <param name="id">Id</param>
            <returns>Return a Project</returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Project.Controller.ProjectController.UpdateProject(System.Int32,Auth_Rol.ASP.NET.Project.DTO.UpdateProjectDTO)">
            <summary>
            Update a project
            </summary>
            <param name="id">ID</param>
            <param name="body">Body</param>
            <returns>No content</returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Project.Controller.ProjectController.DeleteProject(System.Int32)">
            <summary>
            Delete Project
            </summary>
            <returns>No content</returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Project.Repository.ProjectRepository.FinByIdAsync(System.Int32)">
            <summary>
            Fin by id 
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Project.Repository.ProjectRepository.RemoveAsync(Auth_Rol.ASP.NET.Project.Model.ProjectModel)">
            <summary>
            Remove async
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Project.Repository.ProjectRepository.SaveProjectAsync(Auth_Rol.ASP.NET.Project.Model.ProjectModel)">
            <summary>
            Save project
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Project.Repository.ProjectRepository.ToListAsync">
            <summary>
            To list async
            </summary>
            <returns></returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Project.Repository.ProjectRepository.UpdateAsync(Auth_Rol.ASP.NET.Project.Model.ProjectModel)">
            <summary>
            Update project
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.UserProject.Controller.UserProjectController.RegisterUserAndProject(Auth_Rol.ASP.NET.UserProject.DTOs.UsersProjectDTO)">
            <summary>
            Relation Project
            </summary>
            <returns>Relation User and Project with a access level</returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Controllers.UserController.RegisterUser(Auth_Rol.ASP.NET.Users.DTO.CreateUserDTO)">
            <summary>
            Register a new User
            </summary>
            <returns>A new User Register in DB</returns>
            <response code = "201">User register successfully</response>
            <response code = "409">Repeat Username o Email </response>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Controllers.UserController.GetAllUsers">
            <summary>
            Get All Users
            </summary>
            <returns>Get a List of All Users</returns>
            <response code = "200">List of Users</response>
            <response code = "400"> Bad Request</response>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Controllers.UserController.GetUserById(System.Int32)">
            <summary>
            Get a User
            </summary>
            <returns>Return a user by id</returns>
            <response code = "200">Users</response>
            <response code = "404">User not found</response>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Controllers.UserController.UpdateUser(System.Int32,Auth_Rol.ASP.NET.Users.DTO.UpdateUserDTO)">
            <summary>
            Update User
            </summary>
            <returns>Nothing</returns>
            <response code = "204">No Content</response>
            <response code = "404">User not found</response>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Controllers.UserController.DeleteUser(System.Int32)">
            <summary>
            Delete a User
            </summary>
            <returns>Nothing</returns>
            <response code = "204">No Content</response>
            <response code = "404">User not found</response>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Repository.UserRepository.FindByIdAsync(System.Int32)">
            <summary>
            FindByIdAsync 
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Repository.UserRepository.ToListAsync">
            <summary>
            To list async
            </summary>
            <returns></returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Repository.UserRepository.ExistsByEmail(System.String)">
            <summary>
            Exist Email
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Repository.UserRepository.ExistsByUsername(System.String)">
            <summary>
            Exists Username
            </summary>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Repository.UserRepository.RemoveAsync(Auth_Rol.ASP.NET.Users.Model.UsersModel)">
            <summary>
            Remove user
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Repository.UserRepository.AddChangeAsync(Auth_Rol.ASP.NET.Users.Model.UsersModel)">
            <summary>
            Save User register
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Repository.UserRepository.UpdateAsync(Auth_Rol.ASP.NET.Users.Model.UsersModel)">
            <summary>
            Update user
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Auth_Rol.ASP.NET.Users.Repository.UserRepository.FindByKey(System.String,System.Object)">
            <summary>
            FindByKey
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
    </members>
</doc>
